{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a32ff31.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nfunction MessageForm(props) {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text = value.trim();\r\n    if (text.length > 0) sendMessage(creds, chatId, { text });\r\n    setValue('');\r\n  }\r\n  \r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId)\r\n\r\n  }\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files:event.target.files, text: ''\r\n  });\r\n   }\r\n  return (\r\n    <form className='message-form' onSubmit={handleSubmit}>\r\n      <input\r\n        className='message-input'\r\n        value={value}\r\n        placeholder='Send a message ...'\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className='image-button'>\r\n          < PictureOutlined className='picture-icon' />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type='file'\r\n        multiple={false}\r\n        id='upload-button'\r\n        style={{ display: 'none' }}\r\n        onChange={ handleUpload}\r\n      />\r\n      <button type = 'submit' className='send-button'>\r\n        <SendOutlined className='send-icon' />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MessageForm","import React from 'react'\r\n\r\nfunction MyMessage({ message }) {\r\n  if (message?.attachments?.length > 0) {\r\n    //for image\r\n    // ?. is to find the info regarding the variable written before these operator\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt='message-attachment'\r\n        className='message-image'\r\n        style={{ float:'right' }}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    //for text \r\n    // 3b2a50\r\n    <div className='message' style={{ float:'right', marginRight:'18px' ,color:'white',backgroundColor:\"#ff1a1a\"}}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyMessage\r\n","import React from 'react';\r\n\r\nfunction TheirMessage({ lastMessage, message }) {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className='message-row'>\r\n      {isFirstMessageByUser && (\r\n        <div className='message-avatar' style={{ backgroundImage: `url(${message?.sender?.avatar})`}} />\r\n      // ?. is to find the info regarding the variable written before these operator\r\n      )}\r\n      { message?.attachments?.length > 0\r\n      ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt='message-attachment'\r\n          className='message-image'\r\n          style={{ marginLeft : isFirstMessageByUser ? '4px' : '48px' }}\r\n        />\r\n        ) : (\r\n          // cabcdc\r\n        <div className='message' style={{ float:'left',backgroundColor:\"#ffbe65\" , marginLeft : isFirstMessageByUser ? '4px' : '48px'}}>\r\n          { message.text}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TheirMessage","import React from 'react'\r\nimport MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nfunction ChatFeed(props) {\r\n  const { chats, activeChat, userName, messages } = props\r\n  \r\n  const chat = chats && chats[activeChat]\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map((person, index) => \r\n      person.last_read === message.id && (\r\n        <div\r\n          key={`read_${index}`}\r\n          className='read-receipt'\r\n          style={{\r\n            float: isMyMessage ? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar})`\r\n          }}\r\n        />\r\n      )\r\n    )\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width:'100%'}}>\r\n          <div className='message-block'>\r\n            {\r\n              isMyMessage\r\n                ? <MyMessage message={message} />\r\n                :<TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n            }\r\n          </div>\r\n          <div className='read-receipts' style={{marginRight:isMyMessage ? '18px' : '0px' ,marginLeft:isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message,isMyMessage)}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  // renderMessages()\r\n  if (!chat) return 'Loading...';\r\n  return (\r\n    <div className='chat-feed'>\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => \r\n            ` ${person.person.username}`\r\n          )}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className='message-form-container'>\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatFeed\r\n","import React,{useState} from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction LoginForm() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit =async (event) => {\r\n    event.preventDefault();\r\n    const authObject = { 'Project-ID': 'b64dc341-8e5c-440c-bc49-dcfdb910c7f6', 'User-Name': username, 'User-Secret': password }\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password );\r\n      window.location.reload();\r\n    } catch (error) {\r\n      setError('Incorrect Credentials')\r\n    }\r\n  }\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='form'>\r\n        <h1 className='title'>Chat Application</h1>\r\n        <form onSubmit={ handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className='input'placeholder='Username' required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className='input' placeholder='Password' required />\r\n          <div align='center'>\r\n            <button type='submit' className='button'>\r\n              <span>Start Chatting</span>\r\n            </button>\r\n          </div>\r\n          <h2 className='error'>{ error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm;\r\n","import './App.css';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed.jsx';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nfunction App() {\r\n\tif (!localStorage.getItem('username')) return <LoginForm />;\r\n\treturn (\r\n\t\t<ChatEngine\r\n\t\t\theight='100vh'\r\n\t\t\tprojectID='b64dc341-8e5c-440c-bc49-dcfdb910c7f6'\r\n\t\t\tuserName={localStorage.getItem('username')}\r\n\t\t\tuserSecret={localStorage.getItem('password')}\r\n\t\t\trenderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n//@ant-design/icons\r\n//axios\r\n\r\n//react-chat-engine\r\n// https://chatengine.io/\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}